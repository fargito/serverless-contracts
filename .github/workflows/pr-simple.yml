on:
  pull_request:
    types: [opened, synchronize, reopened]

# cancel previous runs on the same PR
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

name: ⛷ PR tests (Using NX)

env:
  CI: true
  NODE_VERSION: 16

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    name: 🏗 Build Project & 🧪 Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - name: Install & cache node dependencies
        uses: ./.github/actions/install-node-deps
      - name: 💾 Cache Nx cache
        id: package-cache
        uses: actions/cache@v2
        with:
          path: |
            nx-cache
          # Cache will be updated at every run: https://github.com/actions/cache/blob/main/workarounds.md#update-a-cache
          key: ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-${{github.event.number}}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-${{github.event.number}}-
            ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-nx-cache-
      - name: '🧪 Test linter'
        run: yarn nx affected --target=test-linter --parallel=2
      - name: '🧪 Test type'
        run: yarn nx affected --target=test-type --parallel=2
      - name: '🧪 Test unit'
        run: yarn nx affected --target=test-unit --parallel=2
      - name: '🧪 Test circular'
        run: yarn nx affected --target=test-circular --parallel=2

  deploy-docs-preview-to-netlify:
    name: 🚀 Deploy docs preview to Netlify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install & cache node dependencies
        uses: ./.github/actions/install-node-deps
      - name: Build docs
        run: |
          cd user-docs/documentation
          pnpm build
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './user-docs/documentation/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: '#${{ github.event.number }}: ${{ github.event.pull_request.title }}'
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          alias: docs-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
