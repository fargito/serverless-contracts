name: 'Lint & Test'
description: 'Run linters and tests on app or library'

inputs:
  project:
    description: 'Project name of the app or library being tested'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Use cached project dependencies
      uses: ./.github/actions/cache-project-dependencies

    - name: Run lint
      # nx run-many is used here, because it will not throw an error if our target action isn't found in the project, which is exactly what we want!
      run: npx nx run-many --target=test-linter --projects=${{ inputs.project }} --parallel
      shell: bash

    - name: Run type test
      run: npx nx run-many --target=test-type --projects=${{ inputs.project }} --parallel
      shell: bash

    - name: Run circular dependencies test
      run: npx nx run-many --target=test-circular --projects=${{ inputs.project }} --parallel
      shell: bash

    - name: Run stylelint
      run: npx nx run-many --target=test-stylelint --projects=${{ inputs.project }} --parallel
      shell: bash

    - name: Run unit tests
      run: npx nx run-many --target=test-unit --projects=${{ inputs.project }} --parallel
      shell: bash
